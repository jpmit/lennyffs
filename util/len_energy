#! /usr/bin/env python
#
# len_energy
# Compute potential energy between surf-surf, surf-fluid and
# fluid-fluid particles and total potential energy (which is simply the
# sum of the previous three terms), and output these numbers.

import sys
import mcfuncs
import numpy as np
import readwrite
from ffsfunctions import getpickparams

if len(sys.argv) != 2:
    sys.exit("Syntax surfenergy infile.xyz")

infile = sys.argv[1]

try:
    params = getpickparams()
except IOError:
    sys.exit("Error: file params.pkl not found")

# read infile 
positions, symbols = readwrite.rxyz(infile,True)

# surf-surf energy
esurftot = 0.0
nparsurf = params['nparsurf']
surfpositions = positions[:nparsurf]
for i in range(nparsurf):
    eij = mcfuncs.energyipar(i+1,surfpositions[i][0],surfpositions[i][1],
                             surfpositions[i][2],surfpositions[:,0],
                             surfpositions[:,1],surfpositions[:,2],params['rcut'],
                             params['rcsq'],params['lboxx'],params['lboxy'],
                             params['lboxz'],params['vrc'],params['vrc2'],
                             params['nparsurf'],params['zperiodic'],
                             params['r6mult'],params['r12mult'])
        
    esurftot = esurftot + eij
# double counting!
esurftot = esurftot/2.0

# fl-fl energy
efltot = 0.0
nparfl = params['nparfl']
flpositions = positions[nparsurf:]
for i in range(nparfl):
    eij = mcfuncs.energyipar(i+1,flpositions[i][0],flpositions[i][1],
                             flpositions[i][2],flpositions[:,0],
                             flpositions[:,1],flpositions[:,2],params['rcut'],
                             params['rcsq'],params['lboxx'],params['lboxy'],
                             params['lboxz'],params['vrc'],params['vrc2'],
                             0,params['zperiodic'],
                             params['r6mult'],params['r12mult'])
        
    efltot = efltot + eij
# double counting!    
efltot = efltot / 2.0

# fl-surf energy
eflsurftot = 0.0
for i in range(nparfl):
    # positions should consist of surface positions plus one fluid particle each time
    npositions = np.append(positions[:nparsurf],[positions[nparsurf+i]],axis=0)
    eij = mcfuncs.energyipar(nparsurf+1,npositions[-1][0],npositions[-1][1],
                             npositions[-1][2],npositions[:,0],
                             npositions[:,1],npositions[:,2],params['rcut'],
                             params['rcsq'],params['lboxx'],params['lboxy'],
                             params['lboxz'],params['vrc'],params['vrc2'],
                             params['nparsurf'],params['zperiodic'],
                             params['r6mult'],params['r12mult'])
        
    eflsurftot = eflsurftot + eij
    
print "surf-surf,fl-fl,surf-fl,total"
print "%.6f,%.6f,%.6f,%.6f" %(esurftot,efltot,eflsurftot,
                              esurftot+efltot+eflsurftot)
