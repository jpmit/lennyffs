#! /usr/bin/env python

# len_ancestry
# James Mithen
# Return FFS 'ancestry' of a particular FFS configuration.

import sys
import re
import glob

import numpy as np

import readwrite

if len(sys.argv) != 2:
    sys.exit("Syntax len_ancestry infile.xyz")

fname = sys.argv[1]

# we assume filenames like pos2_234.xyz etc
posstr = fname.split('/')[-1]
nums = posstr[3:-4]
ns = nums.split('_')

# interface and shot number of the XYZ file under investigation
intnum = int(ns[0])
shotnum = int(ns[1])

# open each interface file in turn
shotnums = np.zeros(intnum + 1,dtype = int)
shotnums[intnum] = shotnum

def interface_dict(ifile):
    """Return shot dict for interface file"""

    # read data from interface*.out file
    fint = open(ifile)
    lines = fint.readlines()
    fint.close()

    # we return dictionary with key that is the shot number, and value
    # that is the shot number it came from (at the previous
    # interface).
    idict = {}
    for lin in lines[6:]:
        spl = lin.split()
        idict[int(spl[0])] = int(spl[1])
    return idict

# work backwards from current interface
for i in range(intnum):
    idict = interface_dict('interface{}.out'.format(intnum - i))
    last = shotnums[intnum - i]
    shotfrom = idict[last]
    shotnums[intnum-i-1] = shotfrom

# stitch together filenames
for i in range(intnum + 1):
    print 'pos{:d}_{:d}.xyz'.format(i, shotnums[i])
